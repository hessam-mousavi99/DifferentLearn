@using DifferentLearn.Core.DTOs.Course;
@model Tuple<List<ShowCourseListViewItem>,int>
@{
    ViewData["Title"] = "نمایش دوره ها";
}

<nav aria-label="breadcrumb">
    <ul class="breadcrumb">
        <li style="margin:5px;"><a href="/">خانه</a></li>
        <li style="margin:5px;">/</li>
        <li style="margin:5px;"><a href="/course">دوره ها</a></li>
    </ul>
</nav>
<div class="container">
    <form id="formfilter" action="/course" method="get">

        <input type="hidden" name="pageId" id="pageid" value="@ViewBag.PageId.ToString()" />
        <section class="term-categories">

            <div class="top-bar">

                <header><h1> دوره ها </h1> </header>

                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right">

                        <div class="input">
                            <input type="text" name="filter" placeholder="موضوع مورد نظر ...">
                            <button style="background-color:green;" type="submit">جستجو</button>
                        </div>

                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            <input id="available-filter-1" name="getType" value="all" checked="" type="radio">
                            <label for="available-filter-1"> همه </label>
                            <input id="available-filter-2" name="getType" value="buy" type="radio">
                            <label for="available-filter-2"> خریدنی </label>
                            <input id="available-filter-3" name="getType" value="free" type="radio">
                            <label for="available-filter-3"> رایگان </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        <div class="select-ddl">
                            <select name="orderByType">
                                <option value="date"> تاریخ انتشار </option>
                                <option value="updatedate"> تاریخ بروز رسانی </option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">

                    <section class="aside-section filter-by-price">
                        <header><h3> فیلتر بر اساس قیمت </h3></header>
                        <div class="price-range">
                            <input type="hidden" value="" id="min-value" name="startPrice">
                            <input type="hidden" value="" id="max-value" name="EndPrice">
                            <div class="price-bar">
                                <div id="priceFilter" class="noUi-target noUi-rtl noUi-horizontal">
                                </div>
                            </div>
                            <div class="max-price">تا <span id="max-text">1000000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">2000</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header><h3> دسته بندی موضوعات </h3></header>
                        <div class="inner">
                            @{
                                List<DifferentLearn.Data.Entites.Course.CourseGroup> groups = ViewBag.Groups as List<DifferentLearn.Data.Entites.Course.CourseGroup>;
                                List<int> selected = ViewBag.selectedGroups as List<int>;

                            }
                            <ul style="list-style:none;">

                                @foreach (var item in groups.Where(g => g.ParentId == null))
                                {
                                    <li>
                                        <input onchange="changegroup()" type="checkbox" name="selectedGroups" value="@item.GroupId" id="cat-1">
                                        <label for="cat-1"> @item.GroupTitle</label>

                                        @if (groups.Any(g => g.ParentId == item.GroupId))
                                        {
                                            <ul style="list-style:none;">
                                                @foreach (var sub in groups.Where(g => g.ParentId == item.GroupId))
                                                {
                                                    <li>
                                                        <input onchange="changegroup()" type="checkbox" name="selectedGroups" value="@sub.GroupId" id="cat-1">
                                                        <label for="cat-1"> @sub.GroupTitle</label>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                                </u>
                        </div>
                    </section>

                </aside>

                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">

                    <section class="terms-items">
                        <div class="row">
                            <!-- col -->
                            @foreach (var item in Model.Item1)
                            {
                                <partial name="_SearchBoxCourse" model="@item" />
                            }

                        </div>

                        @if (Model.Item2 > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">

                                    @for (int i = 1; i <=Model.Item2; i++)
                                    { @* onchange="changepage(@i)" *@
                                        <li class="page-item"><a class="page-link" href="/course?pageid=@i">@i</a></li>
                                    }


                                </ul>
                            </nav>
                        }

                    </section>

                </div>
            </div>
        </section>
    </form>
</div>


@section Scripts{

    <script type="text/javascript">
        // function changepage(pageid) {
        //     $("#pageid").val(pageid);
        //     $("#formfilter").submit();
        // }
        $(function () {

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [2000, 1000000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 2000,
                    'max': 1000000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });



            slider.noUiSlider.on('slide', function (values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });


            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });
        function changegroup() {
            $("#formfilter").submit();
        }
    </script>
 }